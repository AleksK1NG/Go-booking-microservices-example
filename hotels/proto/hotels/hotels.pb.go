// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: hotels.proto

//protoc --go_out=plugins=grpc:. *.proto

package hotelsService

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Hotel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotelID       string                 `protobuf:"bytes,1,opt,name=HotelID,proto3" json:"HotelID,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Country       string                 `protobuf:"bytes,4,opt,name=Country,proto3" json:"Country,omitempty"`
	City          string                 `protobuf:"bytes,5,opt,name=City,proto3" json:"City,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	Location      string                 `protobuf:"bytes,7,opt,name=Location,proto3" json:"Location,omitempty"`
	Rating        float64                `protobuf:"fixed64,8,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Image         string                 `protobuf:"bytes,9,opt,name=Image,proto3" json:"Image,omitempty"`
	Photos        []string               `protobuf:"bytes,10,rep,name=Photos,proto3" json:"Photos,omitempty"`
	CommentsCount int64                  `protobuf:"varint,11,opt,name=CommentsCount,proto3" json:"CommentsCount,omitempty"`
	Latitude      float64                `protobuf:"fixed64,12,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,13,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Hotel) Reset() {
	*x = Hotel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hotel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hotel) ProtoMessage() {}

func (x *Hotel) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hotel.ProtoReflect.Descriptor instead.
func (*Hotel) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{0}
}

func (x *Hotel) GetHotelID() string {
	if x != nil {
		return x.HotelID
	}
	return ""
}

func (x *Hotel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hotel) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Hotel) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Hotel) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Hotel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Hotel) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Hotel) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Hotel) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Hotel) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *Hotel) GetCommentsCount() int64 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *Hotel) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Hotel) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Hotel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Hotel) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotelID string `protobuf:"bytes,1,opt,name=HotelID,proto3" json:"HotelID,omitempty"`
}

func (x *GetByIDReq) Reset() {
	*x = GetByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDReq) ProtoMessage() {}

func (x *GetByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDReq.ProtoReflect.Descriptor instead.
func (*GetByIDReq) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{1}
}

func (x *GetByIDReq) GetHotelID() string {
	if x != nil {
		return x.HotelID
	}
	return ""
}

type GetByIDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotel *Hotel `protobuf:"bytes,1,opt,name=Hotel,proto3" json:"Hotel,omitempty"`
}

func (x *GetByIDRes) Reset() {
	*x = GetByIDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRes) ProtoMessage() {}

func (x *GetByIDRes) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRes.ProtoReflect.Descriptor instead.
func (*GetByIDRes) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{2}
}

func (x *GetByIDRes) GetHotel() *Hotel {
	if x != nil {
		return x.Hotel
	}
	return nil
}

type GetHotelsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *GetHotelsReq) Reset() {
	*x = GetHotelsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotelsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotelsReq) ProtoMessage() {}

func (x *GetHotelsReq) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotelsReq.ProtoReflect.Descriptor instead.
func (*GetHotelsReq) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{3}
}

func (x *GetHotelsReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetHotelsReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetHotelsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount int64    `protobuf:"varint,1,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	TotalPages int64    `protobuf:"varint,2,opt,name=TotalPages,proto3" json:"TotalPages,omitempty"`
	Page       int64    `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
	Size       int64    `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`
	HasMore    bool     `protobuf:"varint,5,opt,name=HasMore,proto3" json:"HasMore,omitempty"`
	Hotels     []*Hotel `protobuf:"bytes,6,rep,name=Hotels,proto3" json:"Hotels,omitempty"`
}

func (x *GetHotelsRes) Reset() {
	*x = GetHotelsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotelsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotelsRes) ProtoMessage() {}

func (x *GetHotelsRes) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotelsRes.ProtoReflect.Descriptor instead.
func (*GetHotelsRes) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{4}
}

func (x *GetHotelsRes) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetHotelsRes) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *GetHotelsRes) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetHotelsRes) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetHotelsRes) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetHotelsRes) GetHotels() []*Hotel {
	if x != nil {
		return x.Hotels
	}
	return nil
}

type CreateHotelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Email         string   `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Country       string   `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty"`
	City          string   `protobuf:"bytes,4,opt,name=City,proto3" json:"City,omitempty"`
	Description   string   `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	Location      string   `protobuf:"bytes,6,opt,name=Location,proto3" json:"Location,omitempty"`
	Rating        float64  `protobuf:"fixed64,7,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Image         string   `protobuf:"bytes,8,opt,name=Image,proto3" json:"Image,omitempty"`
	Photos        []string `protobuf:"bytes,9,rep,name=Photos,proto3" json:"Photos,omitempty"`
	CommentsCount int64    `protobuf:"varint,10,opt,name=CommentsCount,proto3" json:"CommentsCount,omitempty"`
	Latitude      float64  `protobuf:"fixed64,11,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude     float64  `protobuf:"fixed64,12,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
}

func (x *CreateHotelReq) Reset() {
	*x = CreateHotelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHotelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHotelReq) ProtoMessage() {}

func (x *CreateHotelReq) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHotelReq.ProtoReflect.Descriptor instead.
func (*CreateHotelReq) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{5}
}

func (x *CreateHotelReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateHotelReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateHotelReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateHotelReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateHotelReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHotelReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CreateHotelReq) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CreateHotelReq) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateHotelReq) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *CreateHotelReq) GetCommentsCount() int64 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *CreateHotelReq) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateHotelReq) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type CreateHotelRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotel *Hotel `protobuf:"bytes,1,opt,name=Hotel,proto3" json:"Hotel,omitempty"`
}

func (x *CreateHotelRes) Reset() {
	*x = CreateHotelRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHotelRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHotelRes) ProtoMessage() {}

func (x *CreateHotelRes) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHotelRes.ProtoReflect.Descriptor instead.
func (*CreateHotelRes) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{6}
}

func (x *CreateHotelRes) GetHotel() *Hotel {
	if x != nil {
		return x.Hotel
	}
	return nil
}

type UpdateHotelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotelID       string   `protobuf:"bytes,1,opt,name=HotelID,proto3" json:"HotelID,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email         string   `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Country       string   `protobuf:"bytes,4,opt,name=Country,proto3" json:"Country,omitempty"`
	City          string   `protobuf:"bytes,5,opt,name=City,proto3" json:"City,omitempty"`
	Description   string   `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	Location      string   `protobuf:"bytes,7,opt,name=Location,proto3" json:"Location,omitempty"`
	Rating        float64  `protobuf:"fixed64,8,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Image         string   `protobuf:"bytes,9,opt,name=Image,proto3" json:"Image,omitempty"`
	Photos        []string `protobuf:"bytes,10,rep,name=Photos,proto3" json:"Photos,omitempty"`
	CommentsCount int64    `protobuf:"varint,11,opt,name=CommentsCount,proto3" json:"CommentsCount,omitempty"`
	Latitude      float64  `protobuf:"fixed64,12,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude     float64  `protobuf:"fixed64,13,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
}

func (x *UpdateHotelReq) Reset() {
	*x = UpdateHotelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHotelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHotelReq) ProtoMessage() {}

func (x *UpdateHotelReq) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHotelReq.ProtoReflect.Descriptor instead.
func (*UpdateHotelReq) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateHotelReq) GetHotelID() string {
	if x != nil {
		return x.HotelID
	}
	return ""
}

func (x *UpdateHotelReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateHotelReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateHotelReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UpdateHotelReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateHotelReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateHotelReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UpdateHotelReq) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *UpdateHotelReq) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UpdateHotelReq) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *UpdateHotelReq) GetCommentsCount() int64 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *UpdateHotelReq) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateHotelReq) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type UpdateHotelRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotel *Hotel `protobuf:"bytes,1,opt,name=Hotel,proto3" json:"Hotel,omitempty"`
}

func (x *UpdateHotelRes) Reset() {
	*x = UpdateHotelRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHotelRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHotelRes) ProtoMessage() {}

func (x *UpdateHotelRes) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHotelRes.ProtoReflect.Descriptor instead.
func (*UpdateHotelRes) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateHotelRes) GetHotel() *Hotel {
	if x != nil {
		return x.Hotel
	}
	return nil
}

type UploadImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotelID string `protobuf:"bytes,1,opt,name=HotelID,proto3" json:"HotelID,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UploadImageReq) Reset() {
	*x = UploadImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageReq) ProtoMessage() {}

func (x *UploadImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageReq.ProtoReflect.Descriptor instead.
func (*UploadImageReq) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{9}
}

func (x *UploadImageReq) GetHotelID() string {
	if x != nil {
		return x.HotelID
	}
	return ""
}

func (x *UploadImageReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadImageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotel *Hotel `protobuf:"bytes,1,opt,name=Hotel,proto3" json:"Hotel,omitempty"`
}

func (x *UploadImageRes) Reset() {
	*x = UploadImageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotels_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageRes) ProtoMessage() {}

func (x *UploadImageRes) ProtoReflect() protoreflect.Message {
	mi := &file_hotels_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageRes.ProtoReflect.Descriptor instead.
func (*UploadImageRes) Descriptor() ([]byte, []int) {
	return file_hotels_proto_rawDescGZIP(), []int{10}
}

func (x *UploadImageRes) GetHotel() *Hotel {
	if x != nil {
		return x.Hotel
	}
	return nil
}

var File_hotels_proto protoreflect.FileDescriptor

var file_hotels_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1,
	0x03, 0x0a, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x6f, 0x74, 0x65,
	0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x26, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x48, 0x6f, 0x74, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x05, 0x48,
	0x6f, 0x74, 0x65, 0x6c, 0x22, 0x36, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xbe, 0x01, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x48, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x06, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x22, 0xcc, 0x02,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x3c, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x6f,
	0x74, 0x65, 0x6c, 0x52, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x22, 0xe6, 0x02, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x48, 0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x22, 0x3c, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x05, 0x48, 0x6f, 0x74, 0x65,
	0x6c, 0x22, 0x3e, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x3c, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x32,
	0x8d, 0x03, 0x0a, 0x0d, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4d, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c,
	0x12, 0x1d, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x12,
	0x1d, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x19, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x68, 0x6f, 0x74,
	0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x74, 0x65, 0x6c, 0x73, 0x12, 0x1b, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42,
	0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hotels_proto_rawDescOnce sync.Once
	file_hotels_proto_rawDescData = file_hotels_proto_rawDesc
)

func file_hotels_proto_rawDescGZIP() []byte {
	file_hotels_proto_rawDescOnce.Do(func() {
		file_hotels_proto_rawDescData = protoimpl.X.CompressGZIP(file_hotels_proto_rawDescData)
	})
	return file_hotels_proto_rawDescData
}

var file_hotels_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_hotels_proto_goTypes = []interface{}{
	(*Hotel)(nil),                 // 0: hotelsService.Hotel
	(*GetByIDReq)(nil),            // 1: hotelsService.GetByIDReq
	(*GetByIDRes)(nil),            // 2: hotelsService.GetByIDRes
	(*GetHotelsReq)(nil),          // 3: hotelsService.GetHotelsReq
	(*GetHotelsRes)(nil),          // 4: hotelsService.GetHotelsRes
	(*CreateHotelReq)(nil),        // 5: hotelsService.CreateHotelReq
	(*CreateHotelRes)(nil),        // 6: hotelsService.CreateHotelRes
	(*UpdateHotelReq)(nil),        // 7: hotelsService.UpdateHotelReq
	(*UpdateHotelRes)(nil),        // 8: hotelsService.UpdateHotelRes
	(*UploadImageReq)(nil),        // 9: hotelsService.UploadImageReq
	(*UploadImageRes)(nil),        // 10: hotelsService.UploadImageRes
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_hotels_proto_depIdxs = []int32{
	11, // 0: hotelsService.Hotel.CreatedAt:type_name -> google.protobuf.Timestamp
	11, // 1: hotelsService.Hotel.UpdatedAt:type_name -> google.protobuf.Timestamp
	0,  // 2: hotelsService.GetByIDRes.Hotel:type_name -> hotelsService.Hotel
	0,  // 3: hotelsService.GetHotelsRes.Hotels:type_name -> hotelsService.Hotel
	0,  // 4: hotelsService.CreateHotelRes.Hotel:type_name -> hotelsService.Hotel
	0,  // 5: hotelsService.UpdateHotelRes.Hotel:type_name -> hotelsService.Hotel
	0,  // 6: hotelsService.UploadImageRes.Hotel:type_name -> hotelsService.Hotel
	5,  // 7: hotelsService.HotelsService.CreateHotel:input_type -> hotelsService.CreateHotelReq
	7,  // 8: hotelsService.HotelsService.UpdateHotel:input_type -> hotelsService.UpdateHotelReq
	1,  // 9: hotelsService.HotelsService.GetHotelByID:input_type -> hotelsService.GetByIDReq
	3,  // 10: hotelsService.HotelsService.GetHotels:input_type -> hotelsService.GetHotelsReq
	9,  // 11: hotelsService.HotelsService.UploadImage:input_type -> hotelsService.UploadImageReq
	6,  // 12: hotelsService.HotelsService.CreateHotel:output_type -> hotelsService.CreateHotelRes
	8,  // 13: hotelsService.HotelsService.UpdateHotel:output_type -> hotelsService.UpdateHotelRes
	2,  // 14: hotelsService.HotelsService.GetHotelByID:output_type -> hotelsService.GetByIDRes
	4,  // 15: hotelsService.HotelsService.GetHotels:output_type -> hotelsService.GetHotelsRes
	10, // 16: hotelsService.HotelsService.UploadImage:output_type -> hotelsService.UploadImageRes
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_hotels_proto_init() }
func file_hotels_proto_init() {
	if File_hotels_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hotels_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hotel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotels_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotels_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotels_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotelsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotels_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotelsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotels_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHotelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotels_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHotelRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotels_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHotelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotels_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHotelRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotels_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotels_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadImageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hotels_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hotels_proto_goTypes,
		DependencyIndexes: file_hotels_proto_depIdxs,
		MessageInfos:      file_hotels_proto_msgTypes,
	}.Build()
	File_hotels_proto = out.File
	file_hotels_proto_rawDesc = nil
	file_hotels_proto_goTypes = nil
	file_hotels_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HotelsServiceClient is the client API for HotelsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HotelsServiceClient interface {
	CreateHotel(ctx context.Context, in *CreateHotelReq, opts ...grpc.CallOption) (*CreateHotelRes, error)
	UpdateHotel(ctx context.Context, in *UpdateHotelReq, opts ...grpc.CallOption) (*UpdateHotelRes, error)
	GetHotelByID(ctx context.Context, in *GetByIDReq, opts ...grpc.CallOption) (*GetByIDRes, error)
	GetHotels(ctx context.Context, in *GetHotelsReq, opts ...grpc.CallOption) (*GetHotelsRes, error)
	UploadImage(ctx context.Context, in *UploadImageReq, opts ...grpc.CallOption) (*UploadImageRes, error)
}

type hotelsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHotelsServiceClient(cc grpc.ClientConnInterface) HotelsServiceClient {
	return &hotelsServiceClient{cc}
}

func (c *hotelsServiceClient) CreateHotel(ctx context.Context, in *CreateHotelReq, opts ...grpc.CallOption) (*CreateHotelRes, error) {
	out := new(CreateHotelRes)
	err := c.cc.Invoke(ctx, "/hotelsService.HotelsService/CreateHotel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hotelsServiceClient) UpdateHotel(ctx context.Context, in *UpdateHotelReq, opts ...grpc.CallOption) (*UpdateHotelRes, error) {
	out := new(UpdateHotelRes)
	err := c.cc.Invoke(ctx, "/hotelsService.HotelsService/UpdateHotel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hotelsServiceClient) GetHotelByID(ctx context.Context, in *GetByIDReq, opts ...grpc.CallOption) (*GetByIDRes, error) {
	out := new(GetByIDRes)
	err := c.cc.Invoke(ctx, "/hotelsService.HotelsService/GetHotelByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hotelsServiceClient) GetHotels(ctx context.Context, in *GetHotelsReq, opts ...grpc.CallOption) (*GetHotelsRes, error) {
	out := new(GetHotelsRes)
	err := c.cc.Invoke(ctx, "/hotelsService.HotelsService/GetHotels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hotelsServiceClient) UploadImage(ctx context.Context, in *UploadImageReq, opts ...grpc.CallOption) (*UploadImageRes, error) {
	out := new(UploadImageRes)
	err := c.cc.Invoke(ctx, "/hotelsService.HotelsService/UploadImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HotelsServiceServer is the server API for HotelsService service.
type HotelsServiceServer interface {
	CreateHotel(context.Context, *CreateHotelReq) (*CreateHotelRes, error)
	UpdateHotel(context.Context, *UpdateHotelReq) (*UpdateHotelRes, error)
	GetHotelByID(context.Context, *GetByIDReq) (*GetByIDRes, error)
	GetHotels(context.Context, *GetHotelsReq) (*GetHotelsRes, error)
	UploadImage(context.Context, *UploadImageReq) (*UploadImageRes, error)
}

// UnimplementedHotelsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHotelsServiceServer struct {
}

func (*UnimplementedHotelsServiceServer) CreateHotel(context.Context, *CreateHotelReq) (*CreateHotelRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHotel not implemented")
}
func (*UnimplementedHotelsServiceServer) UpdateHotel(context.Context, *UpdateHotelReq) (*UpdateHotelRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHotel not implemented")
}
func (*UnimplementedHotelsServiceServer) GetHotelByID(context.Context, *GetByIDReq) (*GetByIDRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHotelByID not implemented")
}
func (*UnimplementedHotelsServiceServer) GetHotels(context.Context, *GetHotelsReq) (*GetHotelsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHotels not implemented")
}
func (*UnimplementedHotelsServiceServer) UploadImage(context.Context, *UploadImageReq) (*UploadImageRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadImage not implemented")
}

func RegisterHotelsServiceServer(s *grpc.Server, srv HotelsServiceServer) {
	s.RegisterService(&_HotelsService_serviceDesc, srv)
}

func _HotelsService_CreateHotel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateHotelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotelsServiceServer).CreateHotel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotelsService.HotelsService/CreateHotel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotelsServiceServer).CreateHotel(ctx, req.(*CreateHotelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HotelsService_UpdateHotel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHotelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotelsServiceServer).UpdateHotel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotelsService.HotelsService/UpdateHotel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotelsServiceServer).UpdateHotel(ctx, req.(*UpdateHotelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HotelsService_GetHotelByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotelsServiceServer).GetHotelByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotelsService.HotelsService/GetHotelByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotelsServiceServer).GetHotelByID(ctx, req.(*GetByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HotelsService_GetHotels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHotelsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotelsServiceServer).GetHotels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotelsService.HotelsService/GetHotels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotelsServiceServer).GetHotels(ctx, req.(*GetHotelsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HotelsService_UploadImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadImageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotelsServiceServer).UploadImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotelsService.HotelsService/UploadImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotelsServiceServer).UploadImage(ctx, req.(*UploadImageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _HotelsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hotelsService.HotelsService",
	HandlerType: (*HotelsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateHotel",
			Handler:    _HotelsService_CreateHotel_Handler,
		},
		{
			MethodName: "UpdateHotel",
			Handler:    _HotelsService_UpdateHotel_Handler,
		},
		{
			MethodName: "GetHotelByID",
			Handler:    _HotelsService_GetHotelByID_Handler,
		},
		{
			MethodName: "GetHotels",
			Handler:    _HotelsService_GetHotels_Handler,
		},
		{
			MethodName: "UploadImage",
			Handler:    _HotelsService_UploadImage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hotels.proto",
}
