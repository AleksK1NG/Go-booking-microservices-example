version: "3.8"

services:
  redis:
    image: redis:6-alpine
    container_name: user_redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - hotels_network

  postgesql_user:
    image: kartoza/postgis:13.0
    container_name: user_postgesql
    expose:
      - "5433"
    ports:
      - "5433:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user_db
      - POSTGRES_HOST=5433
    command: -p 5433
    volumes:
      - ./user_pgdata:/var/lib/postgresql/data
    networks:
      - hotels_network

  postgesql_main:
    image: kartoza/postgis:13.0
    container_name: main_postgesql
    expose:
      - "5432"
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=main_db
    volumes:
      - ./main_pgdata:/var/lib/postgresql/data
    networks:
      - hotels_network


  #  prometheus:
  #    container_name: prometheus_container
  #    image: prom/prometheus
  #    privileged: true
  #    restart: always
  #    volumes:
  #      - ./monitoring/prometheus-local.yml:/etc/prometheus/prometheus.yml:Z
  #    command:
  #      - '--config.file=/etc/prometheus/prometheus.yml'
  #      - '--storage.tsdb.path=/prometheus'
  #      - '--storage.tsdb.retention=20d'
  #      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #      - '--web.console.templates=/usr/share/prometheus/consoles'
  #    ports:
  #      - '9090:9090'
  #    networks:
  #      - hotels_network

  prometheus:
    container_name: prometheus_container
    image: prom/prometheus
    volumes:
      - ./docker/monitoring/prometheus-local.yml:/etc/prometheus/prometheus.yml:Z
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=20d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    networks:
      - hotels_network


  node_exporter:
    container_name: node_exporter_container
    image: prom/node-exporter
    ports:
      - '9101:9100'
    networks:
      - hotels_network

  grafana:
    container_name: grafana_container
    image: grafana/grafana
    ports:
      - '3000:3000'
    networks:
      - hotels_network

volumes:
  main_pgdata:
  user_pgdata:
#  prometheus-data:

networks:
  hotels_network:
    driver: bridge